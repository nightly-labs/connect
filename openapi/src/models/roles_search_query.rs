/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RolesSearchQuery {
    #[serde(rename = "includeHidden", skip_serializing_if = "Option::is_none")]
    pub include_hidden: Option<bool>,
    #[serde(rename = "orgId", skip_serializing_if = "Option::is_none")]
    pub org_id: Option<i64>,
    #[serde(rename = "teamIds", skip_serializing_if = "Option::is_none")]
    pub team_ids: Option<Vec<i64>>,
    #[serde(rename = "userIds", skip_serializing_if = "Option::is_none")]
    pub user_ids: Option<Vec<i64>>,
}

impl RolesSearchQuery {
    pub fn new() -> RolesSearchQuery {
        RolesSearchQuery {
            include_hidden: None,
            org_id: None,
            team_ids: None,
            user_ids: None,
        }
    }
}

