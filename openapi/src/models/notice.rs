/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Notice {
    #[serde(rename = "inspect", skip_serializing_if = "Option::is_none")]
    pub inspect: Option<i64>,
    /// Link is an optional link for display in the user interface and can be an absolute URL or a path relative to Grafana's root url.
    #[serde(rename = "link", skip_serializing_if = "Option::is_none")]
    pub link: Option<String>,
    #[serde(rename = "severity", skip_serializing_if = "Option::is_none")]
    pub severity: Option<i64>,
    /// Text is freeform descriptive text for the notice.
    #[serde(rename = "text", skip_serializing_if = "Option::is_none")]
    pub text: Option<String>,
}

impl Notice {
    pub fn new() -> Notice {
        Notice {
            inspect: None,
            link: None,
            severity: None,
            text: None,
        }
    }
}

