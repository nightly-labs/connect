/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MassDeleteAnnotationsCmd {
    #[serde(rename = "annotationId", skip_serializing_if = "Option::is_none")]
    pub annotation_id: Option<i64>,
    #[serde(rename = "dashboardId", skip_serializing_if = "Option::is_none")]
    pub dashboard_id: Option<i64>,
    #[serde(rename = "dashboardUID", skip_serializing_if = "Option::is_none")]
    pub dashboard_uid: Option<String>,
    #[serde(rename = "panelId", skip_serializing_if = "Option::is_none")]
    pub panel_id: Option<i64>,
}

impl MassDeleteAnnotationsCmd {
    pub fn new() -> MassDeleteAnnotationsCmd {
        MassDeleteAnnotationsCmd {
            annotation_id: None,
            dashboard_id: None,
            dashboard_uid: None,
            panel_id: None,
        }
    }
}

