/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// DataLink : DataLink define what
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DataLink {
    #[serde(rename = "internal", skip_serializing_if = "Option::is_none")]
    pub internal: Option<Box<models::InternalDataLink>>,
    #[serde(rename = "targetBlank", skip_serializing_if = "Option::is_none")]
    pub target_blank: Option<bool>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl DataLink {
    /// DataLink define what
    pub fn new() -> DataLink {
        DataLink {
            internal: None,
            target_blank: None,
            title: None,
            url: None,
        }
    }
}

