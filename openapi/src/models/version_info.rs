/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// VersionInfo : VersionInfo version info
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VersionInfo {
    /// branch
    #[serde(rename = "branch")]
    pub branch: String,
    /// build date
    #[serde(rename = "buildDate")]
    pub build_date: String,
    /// build user
    #[serde(rename = "buildUser")]
    pub build_user: String,
    /// go version
    #[serde(rename = "goVersion")]
    pub go_version: String,
    /// revision
    #[serde(rename = "revision")]
    pub revision: String,
    /// version
    #[serde(rename = "version")]
    pub version: String,
}

impl VersionInfo {
    /// VersionInfo version info
    pub fn new(branch: String, build_date: String, build_user: String, go_version: String, revision: String, version: String) -> VersionInfo {
        VersionInfo {
            branch,
            build_date,
            build_user,
            go_version,
            revision,
            version,
        }
    }
}

