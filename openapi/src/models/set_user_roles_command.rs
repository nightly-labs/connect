/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SetUserRolesCommand {
    #[serde(rename = "global", skip_serializing_if = "Option::is_none")]
    pub global: Option<bool>,
    #[serde(rename = "includeHidden", skip_serializing_if = "Option::is_none")]
    pub include_hidden: Option<bool>,
    #[serde(rename = "roleUids", skip_serializing_if = "Option::is_none")]
    pub role_uids: Option<Vec<String>>,
}

impl SetUserRolesCommand {
    pub fn new() -> SetUserRolesCommand {
        SetUserRolesCommand {
            global: None,
            include_hidden: None,
            role_uids: None,
        }
    }
}

