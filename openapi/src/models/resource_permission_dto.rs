/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ResourcePermissionDto {
    #[serde(rename = "actions", skip_serializing_if = "Option::is_none")]
    pub actions: Option<Vec<String>>,
    #[serde(rename = "builtInRole", skip_serializing_if = "Option::is_none")]
    pub built_in_role: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    #[serde(rename = "isInherited", skip_serializing_if = "Option::is_none")]
    pub is_inherited: Option<bool>,
    #[serde(rename = "isManaged", skip_serializing_if = "Option::is_none")]
    pub is_managed: Option<bool>,
    #[serde(rename = "isServiceAccount", skip_serializing_if = "Option::is_none")]
    pub is_service_account: Option<bool>,
    #[serde(rename = "permission", skip_serializing_if = "Option::is_none")]
    pub permission: Option<String>,
    #[serde(rename = "roleName", skip_serializing_if = "Option::is_none")]
    pub role_name: Option<String>,
    #[serde(rename = "team", skip_serializing_if = "Option::is_none")]
    pub team: Option<String>,
    #[serde(rename = "teamAvatarUrl", skip_serializing_if = "Option::is_none")]
    pub team_avatar_url: Option<String>,
    #[serde(rename = "teamId", skip_serializing_if = "Option::is_none")]
    pub team_id: Option<i64>,
    #[serde(rename = "userAvatarUrl", skip_serializing_if = "Option::is_none")]
    pub user_avatar_url: Option<String>,
    #[serde(rename = "userId", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<i64>,
    #[serde(rename = "userLogin", skip_serializing_if = "Option::is_none")]
    pub user_login: Option<String>,
}

impl ResourcePermissionDto {
    pub fn new() -> ResourcePermissionDto {
        ResourcePermissionDto {
            actions: None,
            built_in_role: None,
            id: None,
            is_inherited: None,
            is_managed: None,
            is_service_account: None,
            permission: None,
            role_name: None,
            team: None,
            team_avatar_url: None,
            team_id: None,
            user_avatar_url: None,
            user_id: None,
            user_login: None,
        }
    }
}

