/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PrometheusRemoteWriteTargetJson {
    #[serde(rename = "data_source_uid", skip_serializing_if = "Option::is_none")]
    pub data_source_uid: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "remote_write_path", skip_serializing_if = "Option::is_none")]
    pub remote_write_path: Option<String>,
}

impl PrometheusRemoteWriteTargetJson {
    pub fn new() -> PrometheusRemoteWriteTargetJson {
        PrometheusRemoteWriteTargetJson {
            data_source_uid: None,
            id: None,
            remote_write_path: None,
        }
    }
}

