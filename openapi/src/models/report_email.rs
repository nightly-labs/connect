/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ReportEmail {
    /// Comma-separated list of emails to which to send the report to.
    #[serde(rename = "emails", skip_serializing_if = "Option::is_none")]
    pub emails: Option<String>,
    /// Send the report to the emails specified in the report. Required if emails is not present.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Send the report to the emails specified in the report. Required if emails is not present.
    #[serde(rename = "useEmailsFromReport", skip_serializing_if = "Option::is_none")]
    pub use_emails_from_report: Option<bool>,
}

impl ReportEmail {
    pub fn new() -> ReportEmail {
        ReportEmail {
            emails: None,
            id: None,
            use_emails_from_report: None,
        }
    }
}

