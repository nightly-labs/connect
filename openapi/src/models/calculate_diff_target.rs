/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CalculateDiffTarget {
    #[serde(rename = "dashboardId", skip_serializing_if = "Option::is_none")]
    pub dashboard_id: Option<i64>,
    #[serde(rename = "unsavedDashboard", skip_serializing_if = "Option::is_none")]
    pub unsaved_dashboard: Option<serde_json::Value>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<i64>,
}

impl CalculateDiffTarget {
    pub fn new() -> CalculateDiffTarget {
        CalculateDiffTarget {
            dashboard_id: None,
            unsaved_dashboard: None,
            version: None,
        }
    }
}

