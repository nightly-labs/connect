/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// AnnotationQuery : TODO docs FROM: AnnotationQuery in grafana-data/src/types/annotations.ts
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AnnotationQuery {
    /// Set to 1 for the standard annotation query all dashboards have by default.
    #[serde(rename = "builtIn", skip_serializing_if = "Option::is_none")]
    pub built_in: Option<f32>,
    #[serde(rename = "datasource", skip_serializing_if = "Option::is_none")]
    pub datasource: Option<Box<models::DataSourceRef>>,
    /// When enabled the annotation query is issued with every dashboard refresh
    #[serde(rename = "enable", skip_serializing_if = "Option::is_none")]
    pub enable: Option<bool>,
    #[serde(rename = "filter", skip_serializing_if = "Option::is_none")]
    pub filter: Option<Box<models::AnnotationPanelFilter>>,
    /// Annotation queries can be toggled on or off at the top of the dashboard. When hide is true, the toggle is not shown in the dashboard.
    #[serde(rename = "hide", skip_serializing_if = "Option::is_none")]
    pub hide: Option<bool>,
    /// Color to use for the annotation event markers
    #[serde(rename = "iconColor", skip_serializing_if = "Option::is_none")]
    pub icon_color: Option<String>,
    /// Name of annotation.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "target", skip_serializing_if = "Option::is_none")]
    pub target: Option<Box<models::AnnotationTarget>>,
    /// TODO -- this should not exist here, it is based on the --grafana-- datasource
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
}

impl AnnotationQuery {
    /// TODO docs FROM: AnnotationQuery in grafana-data/src/types/annotations.ts
    pub fn new() -> AnnotationQuery {
        AnnotationQuery {
            built_in: None,
            datasource: None,
            enable: None,
            filter: None,
            hide: None,
            icon_color: None,
            name: None,
            target: None,
            r#type: None,
        }
    }
}

