/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// Matcher : Matcher matcher
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Matcher {
    /// is equal
    #[serde(rename = "isEqual", skip_serializing_if = "Option::is_none")]
    pub is_equal: Option<bool>,
    /// is regex
    #[serde(rename = "isRegex")]
    pub is_regex: bool,
    /// name
    #[serde(rename = "name")]
    pub name: String,
    /// value
    #[serde(rename = "value")]
    pub value: String,
}

impl Matcher {
    /// Matcher matcher
    pub fn new(is_regex: bool, name: String, value: String) -> Matcher {
        Matcher {
            is_equal: None,
            is_regex,
            name,
            value,
        }
    }
}

