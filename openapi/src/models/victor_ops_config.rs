/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VictorOpsConfig {
    #[serde(rename = "api_key", skip_serializing_if = "Option::is_none")]
    pub api_key: Option<String>,
    #[serde(rename = "api_key_file", skip_serializing_if = "Option::is_none")]
    pub api_key_file: Option<String>,
    #[serde(rename = "api_url", skip_serializing_if = "Option::is_none")]
    pub api_url: Option<Box<models::Url>>,
    #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "entity_display_name", skip_serializing_if = "Option::is_none")]
    pub entity_display_name: Option<String>,
    #[serde(rename = "http_config", skip_serializing_if = "Option::is_none")]
    pub http_config: Option<Box<models::HttpClientConfig>>,
    #[serde(rename = "message_type", skip_serializing_if = "Option::is_none")]
    pub message_type: Option<String>,
    #[serde(rename = "monitoring_tool", skip_serializing_if = "Option::is_none")]
    pub monitoring_tool: Option<String>,
    #[serde(rename = "routing_key", skip_serializing_if = "Option::is_none")]
    pub routing_key: Option<String>,
    #[serde(rename = "send_resolved", skip_serializing_if = "Option::is_none")]
    pub send_resolved: Option<bool>,
    #[serde(rename = "state_message", skip_serializing_if = "Option::is_none")]
    pub state_message: Option<String>,
}

impl VictorOpsConfig {
    pub fn new() -> VictorOpsConfig {
        VictorOpsConfig {
            api_key: None,
            api_key_file: None,
            api_url: None,
            custom_fields: None,
            entity_display_name: None,
            http_config: None,
            message_type: None,
            monitoring_tool: None,
            routing_key: None,
            send_resolved: None,
            state_message: None,
        }
    }
}

