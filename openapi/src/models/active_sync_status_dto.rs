/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// ActiveSyncStatusDto : ActiveSyncStatusDTO holds the information for LDAP background Sync
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ActiveSyncStatusDto {
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    #[serde(rename = "nextSync", skip_serializing_if = "Option::is_none")]
    pub next_sync: Option<String>,
    #[serde(rename = "prevSync", skip_serializing_if = "Option::is_none")]
    pub prev_sync: Option<Box<models::SyncResult>>,
    #[serde(rename = "schedule", skip_serializing_if = "Option::is_none")]
    pub schedule: Option<String>,
}

impl ActiveSyncStatusDto {
    /// ActiveSyncStatusDTO holds the information for LDAP background Sync
    pub fn new() -> ActiveSyncStatusDto {
        ActiveSyncStatusDto {
            enabled: None,
            next_sync: None,
            prev_sync: None,
            schedule: None,
        }
    }
}

