/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AlertInstancesResponse {
    /// Instances is an array of arrow encoded dataframes each frame has a single row, and a column for each instance (alert identified by unique labels) with a boolean value (firing/not firing)
    #[serde(rename = "instances", skip_serializing_if = "Option::is_none")]
    pub instances: Option<Vec<Vec<i32>>>,
}

impl AlertInstancesResponse {
    pub fn new() -> AlertInstancesResponse {
        AlertInstancesResponse {
            instances: None,
        }
    }
}

