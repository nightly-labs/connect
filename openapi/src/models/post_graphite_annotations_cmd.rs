/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PostGraphiteAnnotationsCmd {
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<String>,
    #[serde(rename = "tags", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Option<serde_json::Value>>,
    #[serde(rename = "what", skip_serializing_if = "Option::is_none")]
    pub what: Option<String>,
    #[serde(rename = "when", skip_serializing_if = "Option::is_none")]
    pub when: Option<i64>,
}

impl PostGraphiteAnnotationsCmd {
    pub fn new() -> PostGraphiteAnnotationsCmd {
        PostGraphiteAnnotationsCmd {
            data: None,
            tags: None,
            what: None,
            when: None,
        }
    }
}

