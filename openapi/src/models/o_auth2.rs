/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OAuth2 {
    #[serde(rename = "TLSConfig", skip_serializing_if = "Option::is_none")]
    pub tls_config: Option<Box<models::TlsConfig>>,
    #[serde(rename = "client_id", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    #[serde(rename = "client_secret", skip_serializing_if = "Option::is_none")]
    pub client_secret: Option<String>,
    #[serde(rename = "client_secret_file", skip_serializing_if = "Option::is_none")]
    pub client_secret_file: Option<String>,
    #[serde(rename = "endpoint_params", skip_serializing_if = "Option::is_none")]
    pub endpoint_params: Option<std::collections::HashMap<String, String>>,
    /// NoProxy contains addresses that should not use a proxy.
    #[serde(rename = "no_proxy", skip_serializing_if = "Option::is_none")]
    pub no_proxy: Option<String>,
    #[serde(rename = "proxy_connect_header", skip_serializing_if = "Option::is_none")]
    pub proxy_connect_header: Option<std::collections::HashMap<String, Vec<String>>>,
    /// ProxyFromEnvironment makes use of net/http ProxyFromEnvironment function to determine proxies.
    #[serde(rename = "proxy_from_environment", skip_serializing_if = "Option::is_none")]
    pub proxy_from_environment: Option<bool>,
    #[serde(rename = "proxy_url", skip_serializing_if = "Option::is_none")]
    pub proxy_url: Option<Box<models::Url>>,
    #[serde(rename = "scopes", skip_serializing_if = "Option::is_none")]
    pub scopes: Option<Vec<String>>,
    #[serde(rename = "token_url", skip_serializing_if = "Option::is_none")]
    pub token_url: Option<String>,
}

impl OAuth2 {
    pub fn new() -> OAuth2 {
        OAuth2 {
            tls_config: None,
            client_id: None,
            client_secret: None,
            client_secret_file: None,
            endpoint_params: None,
            no_proxy: None,
            proxy_connect_header: None,
            proxy_from_environment: None,
            proxy_url: None,
            scopes: None,
            token_url: None,
        }
    }
}

