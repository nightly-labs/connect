/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PushoverConfig {
    #[serde(rename = "device", skip_serializing_if = "Option::is_none")]
    pub device: Option<String>,
    #[serde(rename = "expire", skip_serializing_if = "Option::is_none")]
    pub expire: Option<String>,
    #[serde(rename = "html", skip_serializing_if = "Option::is_none")]
    pub html: Option<bool>,
    #[serde(rename = "http_config", skip_serializing_if = "Option::is_none")]
    pub http_config: Option<Box<models::HttpClientConfig>>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "priority", skip_serializing_if = "Option::is_none")]
    pub priority: Option<String>,
    #[serde(rename = "retry", skip_serializing_if = "Option::is_none")]
    pub retry: Option<String>,
    #[serde(rename = "send_resolved", skip_serializing_if = "Option::is_none")]
    pub send_resolved: Option<bool>,
    #[serde(rename = "sound", skip_serializing_if = "Option::is_none")]
    pub sound: Option<String>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "token", skip_serializing_if = "Option::is_none")]
    pub token: Option<String>,
    #[serde(rename = "token_file", skip_serializing_if = "Option::is_none")]
    pub token_file: Option<String>,
    #[serde(rename = "ttl", skip_serializing_if = "Option::is_none")]
    pub ttl: Option<String>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "url_title", skip_serializing_if = "Option::is_none")]
    pub url_title: Option<String>,
    #[serde(rename = "user_key", skip_serializing_if = "Option::is_none")]
    pub user_key: Option<String>,
    #[serde(rename = "user_key_file", skip_serializing_if = "Option::is_none")]
    pub user_key_file: Option<String>,
}

impl PushoverConfig {
    pub fn new() -> PushoverConfig {
        PushoverConfig {
            device: None,
            expire: None,
            html: None,
            http_config: None,
            message: None,
            priority: None,
            retry: None,
            send_resolved: None,
            sound: None,
            title: None,
            token: None,
            token_file: None,
            ttl: None,
            url: None,
            url_title: None,
            user_key: None,
            user_key_file: None,
        }
    }
}

