/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AlertRuleNotificationSettingsExport {
    #[serde(rename = "group_by", skip_serializing_if = "Option::is_none")]
    pub group_by: Option<Vec<String>>,
    #[serde(rename = "group_interval", skip_serializing_if = "Option::is_none")]
    pub group_interval: Option<String>,
    #[serde(rename = "group_wait", skip_serializing_if = "Option::is_none")]
    pub group_wait: Option<String>,
    #[serde(rename = "mute_time_intervals", skip_serializing_if = "Option::is_none")]
    pub mute_time_intervals: Option<Vec<String>>,
    #[serde(rename = "receiver", skip_serializing_if = "Option::is_none")]
    pub receiver: Option<String>,
    #[serde(rename = "repeat_interval", skip_serializing_if = "Option::is_none")]
    pub repeat_interval: Option<String>,
}

impl AlertRuleNotificationSettingsExport {
    pub fn new() -> AlertRuleNotificationSettingsExport {
        AlertRuleNotificationSettingsExport {
            group_by: None,
            group_interval: None,
            group_wait: None,
            mute_time_intervals: None,
            receiver: None,
            repeat_interval: None,
        }
    }
}

