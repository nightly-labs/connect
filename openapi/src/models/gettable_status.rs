/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GettableStatus {
    #[serde(rename = "cluster")]
    pub cluster: Box<models::ClusterStatus>,
    #[serde(rename = "config")]
    pub config: Box<models::PostableApiAlertingConfig>,
    /// uptime
    #[serde(rename = "uptime")]
    pub uptime: String,
    #[serde(rename = "versionInfo")]
    pub version_info: Box<models::VersionInfo>,
}

impl GettableStatus {
    pub fn new(cluster: models::ClusterStatus, config: models::PostableApiAlertingConfig, uptime: String, version_info: models::VersionInfo) -> GettableStatus {
        GettableStatus {
            cluster: Box::new(cluster),
            config: Box::new(config),
            uptime,
            version_info: Box::new(version_info),
        }
    }
}

