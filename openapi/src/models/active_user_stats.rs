/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ActiveUserStats {
    #[serde(rename = "active_admins_and_editors", skip_serializing_if = "Option::is_none")]
    pub active_admins_and_editors: Option<i64>,
    #[serde(rename = "active_anonymous_devices", skip_serializing_if = "Option::is_none")]
    pub active_anonymous_devices: Option<i64>,
    #[serde(rename = "active_users", skip_serializing_if = "Option::is_none")]
    pub active_users: Option<i64>,
    #[serde(rename = "active_viewers", skip_serializing_if = "Option::is_none")]
    pub active_viewers: Option<i64>,
}

impl ActiveUserStats {
    pub fn new() -> ActiveUserStats {
        ActiveUserStats {
            active_admins_and_editors: None,
            active_anonymous_devices: None,
            active_users: None,
            active_viewers: None,
        }
    }
}

