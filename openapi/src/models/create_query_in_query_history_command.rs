/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// CreateQueryInQueryHistoryCommand : CreateQueryInQueryHistoryCommand is the command for adding query history
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateQueryInQueryHistoryCommand {
    /// UID of the data source for which are queries stored.
    #[serde(rename = "datasourceUid", skip_serializing_if = "Option::is_none")]
    pub datasource_uid: Option<String>,
    #[serde(rename = "queries")]
    pub queries: serde_json::Value,
}

impl CreateQueryInQueryHistoryCommand {
    /// CreateQueryInQueryHistoryCommand is the command for adding query history
    pub fn new(queries: serde_json::Value) -> CreateQueryInQueryHistoryCommand {
        CreateQueryInQueryHistoryCommand {
            datasource_uid: None,
            queries,
        }
    }
}

