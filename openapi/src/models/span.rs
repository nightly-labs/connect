/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Span {
    /// Length of the span.
    #[serde(rename = "Length", skip_serializing_if = "Option::is_none")]
    pub length: Option<i32>,
    /// Gap to previous span (always positive), or starting index for the 1st span (which can be negative).
    #[serde(rename = "Offset", skip_serializing_if = "Option::is_none")]
    pub offset: Option<i32>,
}

impl Span {
    pub fn new() -> Span {
        Span {
            length: None,
            offset: None,
        }
    }
}

