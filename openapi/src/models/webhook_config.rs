/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebhookConfig {
    #[serde(rename = "http_config", skip_serializing_if = "Option::is_none")]
    pub http_config: Option<Box<models::HttpClientConfig>>,
    /// MaxAlerts is the maximum number of alerts to be sent per webhook message. Alerts exceeding this threshold will be truncated. Setting this to 0 allows an unlimited number of alerts.
    #[serde(rename = "max_alerts", skip_serializing_if = "Option::is_none")]
    pub max_alerts: Option<i32>,
    #[serde(rename = "send_resolved", skip_serializing_if = "Option::is_none")]
    pub send_resolved: Option<bool>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<Box<models::Url>>,
    #[serde(rename = "url_file", skip_serializing_if = "Option::is_none")]
    pub url_file: Option<String>,
}

impl WebhookConfig {
    pub fn new() -> WebhookConfig {
        WebhookConfig {
            http_config: None,
            max_alerts: None,
            send_resolved: None,
            url: None,
            url_file: None,
        }
    }
}

