/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PostableNGalertConfig {
    #[serde(rename = "alertmanagersChoice", skip_serializing_if = "Option::is_none")]
    pub alertmanagers_choice: Option<AlertmanagersChoice>,
}

impl PostableNGalertConfig {
    pub fn new() -> PostableNGalertConfig {
        PostableNGalertConfig {
            alertmanagers_choice: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AlertmanagersChoice {
    #[serde(rename = "all")]
    All,
    #[serde(rename = "internal")]
    Internal,
    #[serde(rename = "external")]
    External,
}

impl Default for AlertmanagersChoice {
    fn default() -> AlertmanagersChoice {
        Self::All
    }
}

