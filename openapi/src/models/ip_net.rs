/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IpNet {
    #[serde(rename = "IP", skip_serializing_if = "Option::is_none")]
    pub ip: Option<String>,
    /// See type IPNet and func ParseCIDR for details.
    #[serde(rename = "Mask", skip_serializing_if = "Option::is_none")]
    pub mask: Option<Vec<i32>>,
}

impl IpNet {
    pub fn new() -> IpNet {
        IpNet {
            ip: None,
            mask: None,
        }
    }
}

