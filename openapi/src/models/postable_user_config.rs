/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PostableUserConfig {
    #[serde(rename = "alertmanager_config", skip_serializing_if = "Option::is_none")]
    pub alertmanager_config: Option<Box<models::PostableApiAlertingConfig>>,
    #[serde(rename = "template_files", skip_serializing_if = "Option::is_none")]
    pub template_files: Option<std::collections::HashMap<String, String>>,
}

impl PostableUserConfig {
    pub fn new() -> PostableUserConfig {
        PostableUserConfig {
            alertmanager_config: None,
            template_files: None,
        }
    }
}

