/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TimeIntervalItem {
    #[serde(rename = "days_of_month", skip_serializing_if = "Option::is_none")]
    pub days_of_month: Option<Vec<String>>,
    #[serde(rename = "location", skip_serializing_if = "Option::is_none")]
    pub location: Option<String>,
    #[serde(rename = "months", skip_serializing_if = "Option::is_none")]
    pub months: Option<Vec<String>>,
    #[serde(rename = "times", skip_serializing_if = "Option::is_none")]
    pub times: Option<Vec<models::TimeIntervalTimeRange>>,
    #[serde(rename = "weekdays", skip_serializing_if = "Option::is_none")]
    pub weekdays: Option<Vec<String>>,
    #[serde(rename = "years", skip_serializing_if = "Option::is_none")]
    pub years: Option<Vec<String>>,
}

impl TimeIntervalItem {
    pub fn new() -> TimeIntervalItem {
        TimeIntervalItem {
            days_of_month: None,
            location: None,
            months: None,
            times: None,
            weekdays: None,
            years: None,
        }
    }
}

