/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CorrelationConfigUpdateDto {
    /// Field used to attach the correlation link
    #[serde(rename = "field", skip_serializing_if = "Option::is_none")]
    pub field: Option<String>,
    /// Target data query
    #[serde(rename = "target", skip_serializing_if = "Option::is_none")]
    pub target: Option<serde_json::Value>,
    /// Source data transformations
    #[serde(rename = "transformations", skip_serializing_if = "Option::is_none")]
    pub transformations: Option<Vec<models::Transformation>>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
}

impl CorrelationConfigUpdateDto {
    pub fn new() -> CorrelationConfigUpdateDto {
        CorrelationConfigUpdateDto {
            field: None,
            target: None,
            transformations: None,
            r#type: None,
        }
    }
}

