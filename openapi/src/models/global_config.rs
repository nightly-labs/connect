/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// GlobalConfig : GlobalConfig defines configuration parameters that are valid globally unless overwritten.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GlobalConfig {
    #[serde(rename = "http_config", skip_serializing_if = "Option::is_none")]
    pub http_config: Option<Box<models::HttpClientConfig>>,
    #[serde(rename = "opsgenie_api_key", skip_serializing_if = "Option::is_none")]
    pub opsgenie_api_key: Option<String>,
    #[serde(rename = "opsgenie_api_key_file", skip_serializing_if = "Option::is_none")]
    pub opsgenie_api_key_file: Option<String>,
    #[serde(rename = "opsgenie_api_url", skip_serializing_if = "Option::is_none")]
    pub opsgenie_api_url: Option<Box<models::Url>>,
    #[serde(rename = "pagerduty_url", skip_serializing_if = "Option::is_none")]
    pub pagerduty_url: Option<Box<models::Url>>,
    /// A Duration represents the elapsed time between two instants as an int64 nanosecond count. The representation limits the largest representable duration to approximately 290 years.
    #[serde(rename = "resolve_timeout", skip_serializing_if = "Option::is_none")]
    pub resolve_timeout: Option<i64>,
    #[serde(rename = "slack_api_url", skip_serializing_if = "Option::is_none")]
    pub slack_api_url: Option<Box<models::Url>>,
    #[serde(rename = "slack_api_url_file", skip_serializing_if = "Option::is_none")]
    pub slack_api_url_file: Option<String>,
    #[serde(rename = "smtp_auth_identity", skip_serializing_if = "Option::is_none")]
    pub smtp_auth_identity: Option<String>,
    #[serde(rename = "smtp_auth_password", skip_serializing_if = "Option::is_none")]
    pub smtp_auth_password: Option<String>,
    #[serde(rename = "smtp_auth_password_file", skip_serializing_if = "Option::is_none")]
    pub smtp_auth_password_file: Option<String>,
    #[serde(rename = "smtp_auth_secret", skip_serializing_if = "Option::is_none")]
    pub smtp_auth_secret: Option<String>,
    #[serde(rename = "smtp_auth_username", skip_serializing_if = "Option::is_none")]
    pub smtp_auth_username: Option<String>,
    #[serde(rename = "smtp_from", skip_serializing_if = "Option::is_none")]
    pub smtp_from: Option<String>,
    #[serde(rename = "smtp_hello", skip_serializing_if = "Option::is_none")]
    pub smtp_hello: Option<String>,
    #[serde(rename = "smtp_require_tls", skip_serializing_if = "Option::is_none")]
    pub smtp_require_tls: Option<bool>,
    #[serde(rename = "smtp_smarthost", skip_serializing_if = "Option::is_none")]
    pub smtp_smarthost: Option<Box<models::HostPort>>,
    #[serde(rename = "telegram_api_url", skip_serializing_if = "Option::is_none")]
    pub telegram_api_url: Option<Box<models::Url>>,
    #[serde(rename = "victorops_api_key", skip_serializing_if = "Option::is_none")]
    pub victorops_api_key: Option<String>,
    #[serde(rename = "victorops_api_key_file", skip_serializing_if = "Option::is_none")]
    pub victorops_api_key_file: Option<String>,
    #[serde(rename = "victorops_api_url", skip_serializing_if = "Option::is_none")]
    pub victorops_api_url: Option<Box<models::Url>>,
    #[serde(rename = "webex_api_url", skip_serializing_if = "Option::is_none")]
    pub webex_api_url: Option<Box<models::Url>>,
    #[serde(rename = "wechat_api_corp_id", skip_serializing_if = "Option::is_none")]
    pub wechat_api_corp_id: Option<String>,
    #[serde(rename = "wechat_api_secret", skip_serializing_if = "Option::is_none")]
    pub wechat_api_secret: Option<String>,
    #[serde(rename = "wechat_api_url", skip_serializing_if = "Option::is_none")]
    pub wechat_api_url: Option<Box<models::Url>>,
}

impl GlobalConfig {
    /// GlobalConfig defines configuration parameters that are valid globally unless overwritten.
    pub fn new() -> GlobalConfig {
        GlobalConfig {
            http_config: None,
            opsgenie_api_key: None,
            opsgenie_api_key_file: None,
            opsgenie_api_url: None,
            pagerduty_url: None,
            resolve_timeout: None,
            slack_api_url: None,
            slack_api_url_file: None,
            smtp_auth_identity: None,
            smtp_auth_password: None,
            smtp_auth_password_file: None,
            smtp_auth_secret: None,
            smtp_auth_username: None,
            smtp_from: None,
            smtp_hello: None,
            smtp_require_tls: None,
            smtp_smarthost: None,
            telegram_api_url: None,
            victorops_api_key: None,
            victorops_api_key_file: None,
            victorops_api_url: None,
            webex_api_url: None,
            wechat_api_corp_id: None,
            wechat_api_secret: None,
            wechat_api_url: None,
        }
    }
}

