/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RuleGroupConfigResponse {
    /// A Duration represents the elapsed time between two instants as an int64 nanosecond count. The representation limits the largest representable duration to approximately 290 years.
    #[serde(rename = "interval", skip_serializing_if = "Option::is_none")]
    pub interval: Option<i64>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "rules", skip_serializing_if = "Option::is_none")]
    pub rules: Option<Vec<models::GettableExtendedRuleNode>>,
    #[serde(rename = "source_tenants", skip_serializing_if = "Option::is_none")]
    pub source_tenants: Option<Vec<String>>,
}

impl RuleGroupConfigResponse {
    pub fn new() -> RuleGroupConfigResponse {
        RuleGroupConfigResponse {
            interval: None,
            name: None,
            rules: None,
            source_tenants: None,
        }
    }
}

