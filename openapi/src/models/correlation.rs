/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// Correlation : Correlation is the model for correlations definitions
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Correlation {
    #[serde(rename = "config", skip_serializing_if = "Option::is_none")]
    pub config: Option<Box<models::CorrelationConfig>>,
    /// Description of the correlation
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Label identifying the correlation
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    /// OrgID of the data source the correlation originates from
    #[serde(rename = "orgId", skip_serializing_if = "Option::is_none")]
    pub org_id: Option<i64>,
    /// Provisioned True if the correlation was created during provisioning
    #[serde(rename = "provisioned", skip_serializing_if = "Option::is_none")]
    pub provisioned: Option<bool>,
    /// UID of the data source the correlation originates from
    #[serde(rename = "sourceUID", skip_serializing_if = "Option::is_none")]
    pub source_uid: Option<String>,
    /// UID of the data source the correlation points to
    #[serde(rename = "targetUID", skip_serializing_if = "Option::is_none")]
    pub target_uid: Option<String>,
    /// Unique identifier of the correlation
    #[serde(rename = "uid", skip_serializing_if = "Option::is_none")]
    pub uid: Option<String>,
}

impl Correlation {
    /// Correlation is the model for correlations definitions
    pub fn new() -> Correlation {
        Correlation {
            config: None,
            description: None,
            label: None,
            org_id: None,
            provisioned: None,
            source_uid: None,
            target_uid: None,
            uid: None,
        }
    }
}

