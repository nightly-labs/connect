/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// Threshold : Threshold a single step on the threshold list
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Threshold {
    #[serde(rename = "color", skip_serializing_if = "Option::is_none")]
    pub color: Option<String>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    /// ConfFloat64 is a float64. It Marshals float64 values of NaN of Inf to null.
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<f64>,
}

impl Threshold {
    /// Threshold a single step on the threshold list
    pub fn new() -> Threshold {
        Threshold {
            color: None,
            state: None,
            value: None,
        }
    }
}

