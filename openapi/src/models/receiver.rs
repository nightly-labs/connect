/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Receiver {
    /// active
    #[serde(rename = "active")]
    pub active: bool,
    /// integrations
    #[serde(rename = "integrations")]
    pub integrations: Vec<models::Integration>,
    /// name
    #[serde(rename = "name")]
    pub name: String,
}

impl Receiver {
    pub fn new(active: bool, integrations: Vec<models::Integration>, name: String) -> Receiver {
        Receiver {
            active,
            integrations,
            name,
        }
    }
}

