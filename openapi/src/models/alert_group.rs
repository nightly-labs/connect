/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// AlertGroup : AlertGroup alert group
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AlertGroup {
    /// alerts
    #[serde(rename = "alerts")]
    pub alerts: Vec<models::GettableAlert>,
    /// LabelSet label set
    #[serde(rename = "labels")]
    pub labels: std::collections::HashMap<String, String>,
    #[serde(rename = "receiver")]
    pub receiver: Box<models::Receiver>,
}

impl AlertGroup {
    /// AlertGroup alert group
    pub fn new(alerts: Vec<models::GettableAlert>, labels: std::collections::HashMap<String, String>, receiver: models::Receiver) -> AlertGroup {
        AlertGroup {
            alerts,
            labels,
            receiver: Box::new(receiver),
        }
    }
}

