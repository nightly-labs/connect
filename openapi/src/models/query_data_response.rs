/*
 * Grafana HTTP API.
 *
 * The Grafana backend exposes an HTTP API, the same API is used by the frontend to do everything from saving dashboards, creating users and updating data sources.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@grafana.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// QueryDataResponse : It is the return type of a QueryData call.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QueryDataResponse {
    /// The QueryData method the QueryDataHandler method will set the RefId property on the DataResponses' frames based on these RefIDs.
    #[serde(rename = "results", skip_serializing_if = "Option::is_none")]
    pub results: Option<std::collections::HashMap<String, models::DataResponse>>,
}

impl QueryDataResponse {
    /// It is the return type of a QueryData call.
    pub fn new() -> QueryDataResponse {
        QueryDataResponse {
            results: None,
        }
    }
}

