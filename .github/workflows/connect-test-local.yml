name: connect-test-local.yml

on:
  push:
    branches:
      - master
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  install:
    timeout-minutes: 10
    runs-on: [testing]
    steps:
      - name: Fix permissions
        continue-on-error: true
        run: |
          echo ${{secrets.TESTING_LAPTOP_PASSWORD}} | sudo -S chmod 777 -R  ~/runners/${{ runner.name }}/_work/connect/connect
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        continue-on-error: true
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - name: Setup Infra
        working-directory: ./infra
        run: |
          docker-compose down
          rm -rf .infra/target
          docker-compose up -d --no-deps --force-recreate --remove-orphans
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: install packages
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          pnpm install
        working-directory: ./sdk
      - name: Wait for Infra
        continue-on-error: true
        timeout-minutes: 2
        working-directory: ./infra
        run: |
          ( docker-compose logs --follow  &  ) | grep -q "database system is ready to accept connections"
      - name: Prepare db tables
        run: |
          cargo run --bin tables_migration
      - name: run cargo test
        run: |
          cargo test
          cargo run --bin nightly-connect-server &
      - name: test base local
        run: |
          pnpm test:ci
        working-directory: ./sdk/apps/base
      - name: test solana local
        run: |
          pnpm test:ci
        working-directory: ./sdk/apps/solana
      - name: test sui local
        run: |
          pnpm test:ci
        working-directory: ./sdk/apps/sui
      - name: Clean target
        working-directory: ./infra
        run: |
          docker-compose down
          rm -rf .infra/target
